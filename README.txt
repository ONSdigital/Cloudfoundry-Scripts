# AWS/Bosh/Cloudfoundry Scripts

Various scripts to handle the life cycle of AWS Cloudformation, Bosh and Cloudfoundry.


- backup_cloudfoundry-databases.sh
  - Run errands from https://github.com/ONSdigital/postgresql-databases-release.  This backs up the databases within Cloudfoundry
- backup_cloudfoundry-s3.sh
  - Backup various internal Bosh/Cloudfoundry buckets to another S3 bucket.  This uses subdirectories that are named after the S3 source bucket
- bosh-cmd.sh
  - Helper script that pulls in the correct configuration to run the Bosh CLI
- bosh-env.sh
- bosh-ssh.sh
  - Helper script to call the Bosh CLI with the correct options to allow SSH'ing onto a given host
- bosh_generate_release.sh
  - Script to generate a release for upload onto Bosh
- ca-tool.sh
  - Generic script that creates CA and key pairs signed by the CA
- cf_delete.sh
  - Simple script to login to Cloudfoundry and delete the named app
- cf_push.sh
  - Simple script to login to Cloudfoundry and push the named app
- common-aws.sh
  - Common parts for the various AWS scripts
- common-bosh.sh
  - Common parts for the various Bosh scripts
- common.sh
  - Common parts for the various scripts
- create_aws_cloudformation.sh
  - Creates an AWS infrastructure using various Cloudformation Templates
- create_dbs.sh
  - Reads the named Bosh manifest and creates the named databases
- create_postgresql_db.sh
  - Create the named database and user
- delete_aws_cloudformation.sh
  - Delete a group of AWS Cloudformation
- delete_cloudfoundry.sh
  - Delete a Bosh deployment and delete the Bosh initial environment
- deploy_cloudfoundry.sh
  - Deploys Cloudfoundry - this actually deploys any Bosh manifests, but has so far been soley used to deploy various parts of Cloudfoundry
- display_cf_vms.sh
  - Wraps ```bosh vms``` to provide a continually updated list of instances
- emergency_delete_aws_stack.sh
  - Very simple/stupid script that deletes any AWS Cloudformation stacks that match a given prefix
- export-roles-orgs-user.sh
  - Simple script that exports users, organisations, spaces and roles from a given Cloudfoundry
- find_external_ip.sh
  - Simple script to find a hosts external IP
- functions.sh
  - General functions used by the various scripts
- generate-ssl.sh
  - Wrapper script around ca-tool.sh that creates the various CAs & keypairs required by Cloudfoundry.  Everything is outputted into a YML file that can be sucked in by Bosh
- install_deps.sh
  - Script to install various dependencies (eg awscli, cf-uaac)
- install_packages-EL.sh
  - Script to install various packages on Redhat/CentOS that then allow install_deps.sh to run
- process_cidrs.sh
  - Script to generate various network related config, eg CIDR sizes, static/reserved IP ranges
- setup_cf-admin.sh
  - Create a basic Cloudfoundry admin user
- setup_cf-elasticache-broker.sh
  - Upload the Cloudfoundry ElastiCache broker
- setup_cf-orgspace.sh
  - Create a Cloudfoundry organisation and space
- setup_cf-rds-broker.sh
  - Upload the Cloudfoundry RDS broker
- setup_cf-service-broker.sh
  - Generic script to setup a Cloudfoundry service broker
- setup_cf.sh
  - Script that calls the variopus setup_cf-* scripts to configure a deployed Cloudfoundry instance
- template.sh
  - Base template
- update_aws_cloudformation.sh
  - Update an existing set of AWS Cloudformation templates
- upload_components.sh
  - Upload various Cloudfoundry releases and stemcells.  Also records the uploaded versions
- vendor_update.sh
  - Interactive script to make the handling vendor'd Git repositories a little simplier
